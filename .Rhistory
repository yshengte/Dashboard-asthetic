(nextwave<-get_next_wave(data,recruits))
(result<-rbind(result,nextwave[,1:5]))
while(nrow(nextwave)!=0){
nextwave<-get_next_wave(data,nextwave)
result<-rbind(result,nextwave[,1:5])
}
View(result)
tree.boot.bi.n.times = function(data) {
get_nodes=function(data){
data = data[which(data$SEED==0),]
node_id=sample(data$RESPONDENT_ID,1,replace = T)
one_node=data[data$RESPONDENT_ID==node_id,]
return(one_node)
}
results1 = get_nodes(data)
get_connect_nodes=function(data,node){
#它邀请的点
recruit_node = data[data$RECRUITER_ID==node$RESPONDENT_ID& !is.na(data$RECRUITER_ID),]
#邀请他的点
recruiter_node=data[data$RESPONDENT_ID==node$RECRUITER_ID& !is.na(data$RESPONDENT_ID),]
##合并
result=rbind(recruiter_node,recruit_node)
#添加来源点信息
result$comepoint<-node$RESPONDENT_ID
return(result)
}
first_chain=get_connect_nodes(data,results1)
s.recruits = sample(first_chain$RESPONDENT_ID, nrow(first_chain), replace=T)
recruits<-data.frame()
for (i in 1:length(s.recruits)) {
recruits<-rbind(recruits,first_chain[first_chain$RESPONDENT_ID==s.recruits[i],])
}
result<-rbind(results1,recruits[,1:5])
get_next_wave<-function(data,last_wave){
nextwave<-data.frame()
for (i in 1:nrow(last_wave)) {
if(last_wave$SEED[i]==0){
x<-get_connect_nodes(data,last_wave[i,])
x=x[x$RESPONDENT_ID!=last_wave$comepoint[i],]
sample_result<-sample(x$RESPONDENT_ID, nrow(x), replace=T)
sample_result_df<-data.frame()
for (j in 1:length(sample_result)) {
sample_result_df<-rbind(sample_result_df,x[x$RESPONDENT_ID==sample_result[j],])
}
nextwave<-rbind(sample_result_df,nextwave)
}
}
return(nextwave)
}
nextwave<-get_next_wave(data,recruits)
if(nrow(nextwave)!=0){
result<-rbind(result,nextwave[,1:5])
}
while(nrow(nextwave)!=0){
nextwave<-get_next_wave(data,nextwave)
result<-rbind(result,nextwave[,1:5])
}
return(result)
}
target_nrow = nrow(data)  # The target number of rows
all_results = data.frame()  # Initialize an empty data frame
while(nrow(all_results) < target_nrow) {
result = tree.boot.uni(data)
all_results = rbind(all_results, result)  # Combine results
}
while(nrow(all_results) < target_nrow) {
result = tree.boot.bi.n.times(data)
all_results = rbind(all_results, result)  # Combine results
}
tree.boot.bi.n.times = function(data) {
get_nodes=function(data){
data = data[which(data$SEED==0),]
node_id=sample(data$RESPONDENT_ID,1,replace = T)
one_node=data[data$RESPONDENT_ID==node_id,]
return(one_node)
}
results1 = get_nodes(data)
get_connect_nodes=function(data,node){
#它邀请的点
recruit_node = data[data$RECRUITER_ID==node$RESPONDENT_ID& !is.na(data$RECRUITER_ID),]
#邀请他的点
recruiter_node=data[data$RESPONDENT_ID==node$RECRUITER_ID& !is.na(data$RESPONDENT_ID),]
##合并
result=rbind(recruiter_node,recruit_node)
#添加来源点信息
result$comepoint<-node$RESPONDENT_ID
return(result)
}
first_chain=get_connect_nodes(data,results1)
s.recruits = sample(first_chain$RESPONDENT_ID, nrow(first_chain), replace=T)
recruits<-data.frame()
for (i in 1:length(s.recruits)) {
recruits<-rbind(recruits,first_chain[first_chain$RESPONDENT_ID==s.recruits[i],])
}
result<-rbind(results1,recruits[,1:5])
get_next_wave<-function(data,last_wave){
nextwave<-data.frame()
for (i in 1:nrow(last_wave)) {
if(last_wave$SEED[i]==0){
x<-get_connect_nodes(data,last_wave[i,])
x=x[x$RESPONDENT_ID!=last_wave$comepoint[i],]
sample_result<-sample(x$RESPONDENT_ID, nrow(x), replace=T)
sample_result_df<-data.frame()
for (j in 1:length(sample_result)) {
sample_result_df<-rbind(sample_result_df,x[x$RESPONDENT_ID==sample_result[j],])
}
nextwave<-rbind(sample_result_df,nextwave)
}
}
return(nextwave)
}
nextwave<-get_next_wave(data,recruits)
if(nrow(nextwave)!=0){
result<-rbind(result,nextwave[,1:5])
}
while(nrow(nextwave)!=0){
nextwave<-get_next_wave(data,nextwave)
result<-rbind(result,nextwave[,1:5])
}
return(result)
}
result = tree.boot.bi.n.times(data)
result = tree.boot.bi.n.times(data)
View(data)
View(data)
result = tree.boot.bi.n.times(data)
while(nrow(all_results) < target_nrow) {
all_results = rbind(all_results, result)  # Combine results
}
result = tree.boot.bi.n.times(data)
result = tree.boot.bi.n.times(data)
result = tree.boot.bi.n.times(data)
result = tree.boot.bi.n.times(data)
tree.boot.bi.n.times = function(data) {
#获得一个初始nodes
get_nodes=function(data){
data = data[which(data$SEED==0),]
node_id=sample(data$RESPONDENT_ID,1,replace = T)
one_node=data[data$RESPONDENT_ID==node_id,]
return(one_node)
}
results1 = get_nodes(data)
get_connect_nodes=function(data,node){
#它邀请的点
recruit_node = data[data$RECRUITER_ID==node$RESPONDENT_ID& !is.na(data$RECRUITER_ID),]
#邀请他的点
recruiter_node=data[data$RESPONDENT_ID==node$RECRUITER_ID& !is.na(data$RESPONDENT_ID),]
##合并
result=rbind(recruiter_node,recruit_node)
#添加来源点信息
result$comepoint<-node$RESPONDENT_ID
return(result)
}
first_chain=get_connect_nodes(data,results1)
s.recruits = sample(first_chain$RESPONDENT_ID, nrow(first_chain), replace=T)
recruits<-data.frame()
for (i in 1:length(s.recruits)) {
recruits<-rbind(recruits,first_chain[first_chain$RESPONDENT_ID==s.recruits[i],])
}
result<-rbind(results1,recruits[,1:5])
get_next_wave<-function(data,last_wave){
nextwave<-data.frame()
for (i in 1:nrow(last_wave)) {
if(last_wave$SEED[i]==0){
x<-get_connect_nodes(data,last_wave[i,])
x=x[x$RESPONDENT_ID!=last_wave$comepoint[i],]
sample_result<-sample(x$RESPONDENT_ID, nrow(x), replace=T)
sample_result_df<-data.frame()
for (j in 1:length(sample_result)) {
sample_result_df<-rbind(sample_result_df,x[x$RESPONDENT_ID==sample_result[j],])
}
nextwave<-rbind(sample_result_df,nextwave)
}
}
return(nextwave)
}
nextwave<-get_next_wave(data,recruits)
if(nrow(nextwave)!=0){
result<-rbind(result,nextwave[,1:5])
}
while(nrow(nextwave)!=0){
nextwave<-get_next_wave(data,nextwave)
result<-rbind(result,nextwave[,1:5])
}
return(result)
}
target_nrow = nrow(data)  # The target number of rows
all_results = data.frame()  # Initialize an empty data frame
result = tree.boot.bi.n.times(data)
rm(list=ls())
library(tidyverse)
toy_data_rds = read_csv('C:\\Users\\sheng\\Desktop\\RA_RDS\\bootstrap_function\\toy_data_handle.csv')
toy_data_rds$age = rnorm(nrow(toy_data_rds), 40, 8)
#function parameter setting
RESPONDENT_ID = toy_data_rds$ID
SEED_ID = toy_data_rds$S_ID
RECRUITER_ID = toy_data_rds$R_ID
SEED = toy_data_rds$SEED
n.times=100
data.cov = toy_data_rds$age
data.cov = as.data.frame(data.cov)
data = as.data.frame(cbind(RESPONDENT_ID, SEED_ID, SEED, RECRUITER_ID, data.cov))
library(tidyverse)
toy_data_rds = read_csv('C:\\Users\\sheng\\Desktop\\RA_RDS\\bootstrap_function\\toy_data_handle.csv')
toy_data_rds$age = rnorm(nrow(toy_data_rds), 40, 8)
#function parameter setting
RESPONDENT_ID = toy_data_rds$ID
SEED_ID = toy_data_rds$S_ID
RECRUITER_ID = toy_data_rds$R_ID
SEED = toy_data_rds$SEED
n.times=100
data.cov = toy_data_rds$age
data.cov = as.data.frame(data.cov)
data = as.data.frame(cbind(RESPONDENT_ID, SEED_ID, SEED, RECRUITER_ID, data.cov))
View(data)
tree.boot.bi.n.times = function(data) {
#获得一个初始nodes
get_nodes=function(data){
data = data[which(data$SEED==0),]
node_id=sample(data$RESPONDENT_ID,1,replace = T)
one_node=data[data$RESPONDENT_ID==node_id,]
return(one_node)
}
results1 = get_nodes(data)
get_connect_nodes=function(data,node){
#它邀请的点
recruit_node = data[data$RECRUITER_ID==node$RESPONDENT_ID& !is.na(data$RECRUITER_ID),]
#邀请他的点
recruiter_node=data[data$RESPONDENT_ID==node$RECRUITER_ID& !is.na(data$RESPONDENT_ID),]
##合并
result=rbind(recruiter_node,recruit_node)
#添加来源点信息
result$comepoint<-node$RESPONDENT_ID
return(result)
}
first_chain=get_connect_nodes(data,results1)
s.recruits = sample(first_chain$RESPONDENT_ID, nrow(first_chain), replace=T)
recruits<-data.frame()
for (i in 1:length(s.recruits)) {
recruits<-rbind(recruits,first_chain[first_chain$RESPONDENT_ID==s.recruits[i],])
}
result<-rbind(results1,recruits[,1:5])
get_next_wave<-function(data,last_wave){
nextwave<-data.frame()
for (i in 1:nrow(last_wave)) {
if(last_wave$SEED[i]==0){
x<-get_connect_nodes(data,last_wave[i,])
x=x[x$RESPONDENT_ID!=last_wave$comepoint[i],]
sample_result<-sample(x$RESPONDENT_ID, nrow(x), replace=T)
sample_result_df<-data.frame()
for (j in 1:length(sample_result)) {
sample_result_df<-rbind(sample_result_df,x[x$RESPONDENT_ID==sample_result[j],])
}
nextwave<-rbind(sample_result_df,nextwave)
}
}
return(nextwave)
}
nextwave<-get_next_wave(data,recruits)
if(nrow(nextwave)!=0){
result<-rbind(result,nextwave[,1:5])
}
while(nrow(nextwave)!=0){
nextwave<-get_next_wave(data,nextwave)
result<-rbind(result,nextwave[,1:5])
}
return(result)
}
target_nrow = nrow(data)  # The target number of rows
all_results = data.frame()  # Initialize an empty data frame
result = tree.boot.bi.n.times(data)
tree.boot.bi.n.times = function(data) {
#获得一个初始nodes
get_nodes=function(data){
data = data[which(data$SEED==0),]
node_id=sample(data$RESPONDENT_ID,1,replace = T)
one_node=data[data$RESPONDENT_ID==node_id,]
return(one_node)
}
results1 = get_nodes(data)
get_connect_nodes=function(data,node){
#它邀请的点
recruit_node = data[data$RECRUITER_ID==node$RESPONDENT_ID& !is.na(data$RECRUITER_ID),]
#邀请他的点
recruiter_node=data[data$RESPONDENT_ID==node$RECRUITER_ID& !is.na(data$RESPONDENT_ID),]
##合并
result=rbind(recruiter_node,recruit_node)
#添加来源点信息
result$comepoint<-node$RESPONDENT_ID
return(result)
}
first_chain=get_connect_nodes(data,results1)
s.recruits = sample(first_chain$RESPONDENT_ID, nrow(first_chain), replace=T)
recruits<-data.frame()
for (i in 1:length(s.recruits)) {
recruits<-rbind(recruits,first_chain[first_chain$RESPONDENT_ID==s.recruits[i],])
}
result<-rbind(results1,recruits[,1:5])
get_next_wave<-function(data,last_wave){
nextwave<-data.frame()
for (i in 1:nrow(last_wave)) {
if(!is.na(last_wave$SEED[i]) &&last_wave$SEED[i]==0){
x<-get_connect_nodes(data,last_wave[i,])
x=x[x$RESPONDENT_ID!=last_wave$comepoint[i],]
sample_result<-sample(x$RESPONDENT_ID, nrow(x), replace=T)
sample_result_df<-data.frame()
for (j in 1:length(sample_result)) {
sample_result_df<-rbind(sample_result_df,x[x$RESPONDENT_ID==sample_result[j],])
}
nextwave<-rbind(sample_result_df,nextwave)
}
}
return(nextwave)
}
nextwave<-get_next_wave(data,recruits)
if(nrow(nextwave)!=0){
result<-rbind(result,nextwave[,1:5])
}
while(nrow(nextwave)!=0){
nextwave<-get_next_wave(data,nextwave)
result<-rbind(result,nextwave[,1:5])
}
return(result)
}
target_nrow = nrow(data)  # The target number of rows
all_results = data.frame()  # Initialize an empty data frame
result = tree.boot.bi.n.times(data)
result = tree.boot.bi.n.times(data)
View(data)
View(result)
tree.boot.bi.n.times = function(data) {
#获得一个初始nodes
get_nodes=function(data){
data = data[which(data$SEED==0),]
node_id=sample(data$RESPONDENT_ID,1,replace = T)
one_node=data[data$RESPONDENT_ID==node_id,]
return(one_node)
}
results1 = get_nodes(data)
get_connect_nodes=function(data,node){
#它邀请的点
recruit_node = data[data$RECRUITER_ID==node$RESPONDENT_ID& !is.na(data$RECRUITER_ID),]
#邀请他的点
recruiter_node=data[data$RESPONDENT_ID==node$RECRUITER_ID& !is.na(data$RESPONDENT_ID),]
##合并
result=rbind(recruiter_node,recruit_node)
#添加来源点信息
result$comepoint<-node$RESPONDENT_ID
return(result)
}
first_chain=get_connect_nodes(data,results1)
s.recruits = sample(first_chain$RESPONDENT_ID, nrow(first_chain), replace=T)
recruits<-data.frame()
for (i in 1:length(s.recruits)) {
recruits<-rbind(recruits,first_chain[first_chain$RESPONDENT_ID==s.recruits[i],])
}
result<-rbind(results1,recruits[,1:5])
get_next_wave<-function(data,last_wave){
nextwave<-data.frame()
for (i in 1:nrow(last_wave)) {
if(last_wave$SEED[i]==0){
x<-get_connect_nodes(data,last_wave[i,])
x=x[x$RESPONDENT_ID!=last_wave$comepoint[i],]
sample_result<-sample(x$RESPONDENT_ID, nrow(x), replace=T)
sample_result_df<-data.frame()
for (j in 1:length(sample_result)) {
sample_result_df<-rbind(sample_result_df,x[x$RESPONDENT_ID==sample_result[j],])
}
nextwave<-rbind(sample_result_df,nextwave)
}else{
next
}
}
return(nextwave)
}
nextwave<-get_next_wave(data,recruits)
if(nrow(nextwave)!=0){
result<-rbind(result,nextwave[,1:5])
}
while(nrow(nextwave)!=0){
nextwave<-get_next_wave(data,nextwave)
result<-rbind(result,nextwave[,1:5])
}
return(result)
}
target_nrow = nrow(data)  # The target number of rows
all_results = data.frame()  # Initialize an empty data frame
result = tree.boot.bi.n.times(data)
result = tree.boot.bi.n.times(data)
result = tree.boot.bi.n.times(data)
result = tree.boot.bi.n.times(data)
result = tree.boot.bi.n.times(data)
View(result)
tree.boot.bi.n.times = function(data) {
#获得一个初始nodes
get_nodes=function(data){
data = data[which(data$SEED==0),]
node_id=sample(data$RESPONDENT_ID,1,replace = T)
one_node=data[data$RESPONDENT_ID==node_id,]
return(one_node)
}
results1 = get_nodes(data)
get_connect_nodes=function(data,node){
#它邀请的点
recruit_node = data[data$RECRUITER_ID==node$RESPONDENT_ID& !is.na(data$RECRUITER_ID),]
#邀请他的点
recruiter_node=data[data$RESPONDENT_ID==node$RECRUITER_ID& !is.na(data$RESPONDENT_ID),]
##合并
result=rbind(recruiter_node,recruit_node)
#添加来源点信息
result$comepoint<-node$RESPONDENT_ID
return(result)
}
first_chain=get_connect_nodes(data,results1)
s.recruits = sample(first_chain$RESPONDENT_ID, nrow(first_chain), replace=T)
recruits<-data.frame()
for (i in 1:length(s.recruits)) {
recruits<-rbind(recruits,first_chain[first_chain$RESPONDENT_ID==s.recruits[i],])
}
result<-rbind(results1,recruits[,1:5])
get_next_wave<-function(data,last_wave){
nextwave<-data.frame()
for (i in 1:nrow(last_wave)) {
if(!is.na(last_wave$SEED[i]) &&last_wave$SEED[i]==0){
x<-get_connect_nodes(data,last_wave[i,])
x=x[x$RESPONDENT_ID!=last_wave$comepoint[i],]
sample_result<-sample(x$RESPONDENT_ID, nrow(x), replace=T)
sample_result_df<-data.frame()
for (j in 1:length(sample_result)) {
sample_result_df<-rbind(sample_result_df,x[x$RESPONDENT_ID==sample_result[j],])
}
nextwave<-rbind(sample_result_df,nextwave)
}else{
next
}
}
return(nextwave)
}
nextwave<-get_next_wave(data,recruits)
if(nrow(nextwave)!=0){
result<-rbind(result,nextwave[,1:5])
}
while(nrow(nextwave)!=0){
nextwave<-get_next_wave(data,nextwave)
result<-rbind(result,nextwave[,1:5])
}
return(result)
}
target_nrow = nrow(data)  # The target number of rows
all_results = data.frame()  # Initialize an empty data frame
result = tree.boot.bi.n.times(data)
shiny::runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
shiny::runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('D:/RA/RDSTOOL/Rshiny/7Download/plot/PDF_PNG_downloadButton()_downloadHandler()')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
shiny::runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
IDs <- list(
Select = create_ids(c("rcoupon", "respID", "plot", "waves", "seeds",
"prog", "resp", "chain",
"color", "demo_format",
#后为新添加
"cpt_font_family",
"cpt_font_face_title","cpt_font_face_axis",
"pc_font_family","pc_font_face_title",
"rc_layout_method","rc_font_family"),
"select"),
Keyboard = create_ids(c("max_coupon",
"prog", "resp", "chain",
"demo_height", "demo_width", "demo_scale"),
"keyboard"),
File = create_ids(c("input"), "file"),
Table = create_ids(c("input"), "table"),
Plot = create_ids(c("prog", "resp", "chain", "map", "demo"), "plot"),
Button = create_ids(c("toggle_left_panel", "toggle_right_panel",
"toggle_step1", "toggle_step2", "toggle_step3",
"add_tab", "prog_add", "resp_add", "chain_add",
"select_all_waves", "deselect_all_waves",
"select_all_seeds", "deselect_all_seeds",
"add_color", "set_palette", "clear_palette", "default_palette"
#新加入
),
"button"),
UI = create_ids(c("panel_toggle", "middle_panel", "right_panel",
"var_select_main", "var_select_other",
"palette"),
"ui"),
Tabset = create_ids(c("main", "prog", "resp", "chain"),
"tabset"),
Tab = create_ids(c("data"),
"tab"),
Other = create_ids(c("left_panel_div", "right_panel_div","download"),
"other"),
Slider = create_ids(c("cpt_t_size","cpt_subt_size","cpt_x_t_size","cpt_y_t_size","cpt_legend_text_size",
"cpt_x_text_size","cpt_y_text_size",
"pc_bar_width","pc_title_size","pc_legend_text_size",
"pc_x_axis_text_size","pc_y_axis_text_size",
"rc_title_size"),
"slider")
)
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
shiny::runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
runApp('C:/Users/sheng/Desktop/RA_RDS/Dashboard athsetics')
